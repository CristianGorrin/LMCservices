#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RDGs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LMCdatabase")]
	public partial class LMCdatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblBankAccount(tblBankAccount instance);
    partial void UpdatetblBankAccount(tblBankAccount instance);
    partial void DeletetblBankAccount(tblBankAccount instance);
    partial void InserttblCompanyCustomer(tblCompanyCustomer instance);
    partial void UpdatetblCompanyCustomer(tblCompanyCustomer instance);
    partial void DeletetblCompanyCustomer(tblCompanyCustomer instance);
    partial void InserttblCompanyOrder(tblCompanyOrder instance);
    partial void UpdatetblCompanyOrder(tblCompanyOrder instance);
    partial void DeletetblCompanyOrder(tblCompanyOrder instance);
    partial void InserttblDeleteItem(tblDeleteItem instance);
    partial void UpdatetblDeleteItem(tblDeleteItem instance);
    partial void DeletetblDeleteItem(tblDeleteItem instance);
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    partial void InserttblPostNo(tblPostNo instance);
    partial void UpdatetblPostNo(tblPostNo instance);
    partial void DeletetblPostNo(tblPostNo instance);
    partial void InserttblPrivateCustomer(tblPrivateCustomer instance);
    partial void UpdatetblPrivateCustomer(tblPrivateCustomer instance);
    partial void DeletetblPrivateCustomer(tblPrivateCustomer instance);
    partial void InserttblPrivetOrder(tblPrivetOrder instance);
    partial void UpdatetblPrivetOrder(tblPrivetOrder instance);
    partial void DeletetblPrivetOrder(tblPrivetOrder instance);
    partial void InserttblWorker(tblWorker instance);
    partial void UpdatetblWorker(tblWorker instance);
    partial void DeletetblWorker(tblWorker instance);
    partial void InserttblWorkerStatus(tblWorkerStatus instance);
    partial void UpdatetblWorkerStatus(tblWorkerStatus instance);
    partial void DeletetblWorkerStatus(tblWorkerStatus instance);
    #endregion
		
		public LMCdatabaseDataContext() : 
				base(global::RDGs.Properties.Settings.Default.LMCdatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LMCdatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMCdatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMCdatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMCdatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblBankAccount> tblBankAccounts
		{
			get
			{
				return this.GetTable<tblBankAccount>();
			}
		}
		
		public System.Data.Linq.Table<tblCompanyCustomer> tblCompanyCustomers
		{
			get
			{
				return this.GetTable<tblCompanyCustomer>();
			}
		}
		
		public System.Data.Linq.Table<tblCompanyOrder> tblCompanyOrders
		{
			get
			{
				return this.GetTable<tblCompanyOrder>();
			}
		}
		
		public System.Data.Linq.Table<tblDeleteItem> tblDeleteItems
		{
			get
			{
				return this.GetTable<tblDeleteItem>();
			}
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartments
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tblPostNo> tblPostNos
		{
			get
			{
				return this.GetTable<tblPostNo>();
			}
		}
		
		public System.Data.Linq.Table<tblPrivateCustomer> tblPrivateCustomers
		{
			get
			{
				return this.GetTable<tblPrivateCustomer>();
			}
		}
		
		public System.Data.Linq.Table<tblPrivetOrder> tblPrivetOrders
		{
			get
			{
				return this.GetTable<tblPrivetOrder>();
			}
		}
		
		public System.Data.Linq.Table<tblWorker> tblWorkers
		{
			get
			{
				return this.GetTable<tblWorker>();
			}
		}
		
		public System.Data.Linq.Table<tblWorkerStatus> tblWorkerStatus
		{
			get
			{
				return this.GetTable<tblWorkerStatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBankAccounts")]
	public partial class tblBankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _bank;
		
		private string _accountName;
		
		private int _regNo;
		
		private string _accountNo;
		
		private System.Nullable<decimal> _balance;
		
		private EntitySet<tblCompanyOrder> _tblCompanyOrders;
		
		private EntitySet<tblPrivetOrder> _tblPrivetOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnbankChanging(string value);
    partial void OnbankChanged();
    partial void OnaccountNameChanging(string value);
    partial void OnaccountNameChanged();
    partial void OnregNoChanging(int value);
    partial void OnregNoChanged();
    partial void OnaccountNoChanging(string value);
    partial void OnaccountNoChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    #endregion
		
		public tblBankAccount()
		{
			this._tblCompanyOrders = new EntitySet<tblCompanyOrder>(new Action<tblCompanyOrder>(this.attach_tblCompanyOrders), new Action<tblCompanyOrder>(this.detach_tblCompanyOrders));
			this._tblPrivetOrders = new EntitySet<tblPrivetOrder>(new Action<tblPrivetOrder>(this.attach_tblPrivetOrders), new Action<tblPrivetOrder>(this.detach_tblPrivetOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50)")]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this.OnaccountNameChanging(value);
					this.SendPropertyChanging();
					this._accountName = value;
					this.SendPropertyChanged("accountName");
					this.OnaccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regNo", DbType="Int NOT NULL")]
		public int regNo
		{
			get
			{
				return this._regNo;
			}
			set
			{
				if ((this._regNo != value))
				{
					this.OnregNoChanging(value);
					this.SendPropertyChanging();
					this._regNo = value;
					this.SendPropertyChanged("regNo");
					this.OnregNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNo", DbType="nvarchar(30) NOT NULL", CanBeNull=false)]
		public string accountNo
		{
			get
			{
				return this._accountNo;
			}
			set
			{
				if ((this._accountNo != value))
				{
					this.OnaccountNoChanging(value);
					this.SendPropertyChanging();
					this._accountNo = value;
					this.SendPropertyChanged("accountNo");
					this.OnaccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblCompanyOrder", Storage="_tblCompanyOrders", ThisKey="Id", OtherKey="paidToACC")]
		public EntitySet<tblCompanyOrder> tblCompanyOrders
		{
			get
			{
				return this._tblCompanyOrders;
			}
			set
			{
				this._tblCompanyOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblPrivetOrder", Storage="_tblPrivetOrders", ThisKey="Id", OtherKey="paidToACC")]
		public EntitySet<tblPrivetOrder> tblPrivetOrders
		{
			get
			{
				return this._tblPrivetOrders;
			}
			set
			{
				this._tblPrivetOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblBankAccount = this;
		}
		
		private void detach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblBankAccount = null;
		}
		
		private void attach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblBankAccount = this;
		}
		
		private void detach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblBankAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompanyCustomers")]
	public partial class tblCompanyCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyCustomersNo;
		
		private string _companyName;
		
		private string _companyContactPerson;
		
		private int _cvrNo;
		
		private string _phoneNo;
		
		private string _altPhoneNo;
		
		private string @__address;
		
		private int _postNo;
		
		private string _email;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<tblCompanyOrder> _tblCompanyOrders;
		
		private EntityRef<tblPostNo> _tblPostNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyCustomersNoChanging(int value);
    partial void OncompanyCustomersNoChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyContactPersonChanging(string value);
    partial void OncompanyContactPersonChanged();
    partial void OncvrNoChanging(int value);
    partial void OncvrNoChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    partial void OnaltPhoneNoChanging(string value);
    partial void OnaltPhoneNoChanged();
    partial void On_addressChanging(string value);
    partial void On_addressChanged();
    partial void OnpostNoChanging(int value);
    partial void OnpostNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public tblCompanyCustomer()
		{
			this._tblCompanyOrders = new EntitySet<tblCompanyOrder>(new Action<tblCompanyOrder>(this.attach_tblCompanyOrders), new Action<tblCompanyOrder>(this.detach_tblCompanyOrders));
			this._tblPostNo = default(EntityRef<tblPostNo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCustomersNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int companyCustomersNo
		{
			get
			{
				return this._companyCustomersNo;
			}
			set
			{
				if ((this._companyCustomersNo != value))
				{
					this.OncompanyCustomersNoChanging(value);
					this.SendPropertyChanging();
					this._companyCustomersNo = value;
					this.SendPropertyChanged("companyCustomersNo");
					this.OncompanyCustomersNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyContactPerson", DbType="NVarChar(100)")]
		public string companyContactPerson
		{
			get
			{
				return this._companyContactPerson;
			}
			set
			{
				if ((this._companyContactPerson != value))
				{
					this.OncompanyContactPersonChanging(value);
					this.SendPropertyChanging();
					this._companyContactPerson = value;
					this.SendPropertyChanged("companyContactPerson");
					this.OncompanyContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cvrNo", DbType="Int NOT NULL")]
		public int cvrNo
		{
			get
			{
				return this._cvrNo;
			}
			set
			{
				if ((this._cvrNo != value))
				{
					this.OncvrNoChanging(value);
					this.SendPropertyChanging();
					this._cvrNo = value;
					this.SendPropertyChanged("cvrNo");
					this.OncvrNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altPhoneNo", DbType="NVarChar(25)")]
		public string altPhoneNo
		{
			get
			{
				return this._altPhoneNo;
			}
			set
			{
				if ((this._altPhoneNo != value))
				{
					this.OnaltPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._altPhoneNo = value;
					this.SendPropertyChanged("altPhoneNo");
					this.OnaltPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_address]", Storage="__address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _address
		{
			get
			{
				return this.@__address;
			}
			set
			{
				if ((this.@__address != value))
				{
					this.On_addressChanging(value);
					this.SendPropertyChanging();
					this.@__address = value;
					this.SendPropertyChanged("_address");
					this.On_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postNo", DbType="Int NOT NULL")]
		public int postNo
		{
			get
			{
				return this._postNo;
			}
			set
			{
				if ((this._postNo != value))
				{
					if (this._tblPostNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpostNoChanging(value);
					this.SendPropertyChanging();
					this._postNo = value;
					this.SendPropertyChanged("postNo");
					this.OnpostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompanyCustomer_tblCompanyOrder", Storage="_tblCompanyOrders", ThisKey="companyCustomersNo", OtherKey="customer")]
		public EntitySet<tblCompanyOrder> tblCompanyOrders
		{
			get
			{
				return this._tblCompanyOrders;
			}
			set
			{
				this._tblCompanyOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblCompanyCustomer", Storage="_tblPostNo", ThisKey="postNo", OtherKey="ID", IsForeignKey=true)]
		public tblPostNo tblPostNo
		{
			get
			{
				return this._tblPostNo.Entity;
			}
			set
			{
				tblPostNo previousValue = this._tblPostNo.Entity;
				if (((previousValue != value) 
							|| (this._tblPostNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPostNo.Entity = null;
						previousValue.tblCompanyCustomers.Remove(this);
					}
					this._tblPostNo.Entity = value;
					if ((value != null))
					{
						value.tblCompanyCustomers.Add(this);
						this._postNo = value.ID;
					}
					else
					{
						this._postNo = default(int);
					}
					this.SendPropertyChanged("tblPostNo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblCompanyCustomer = this;
		}
		
		private void detach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblCompanyCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompanyOrders")]
	public partial class tblCompanyOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoiceNo;
		
		private System.Nullable<System.DateTime> _createdDate;
		
		private System.DateTime _taskDate;
		
		private string _descriptionTask;
		
		private System.Nullable<System.DateTime> _dateSendBill;
		
		private System.Nullable<int> _daysToPaid;
		
		private System.Nullable<decimal> _hoursUse;
		
		private System.Nullable<decimal> _paidHour;
		
		private int _createBy;
		
		private int _paidToACC;
		
		private int _customer;
		
		private System.Nullable<bool> _paid;
		
		private EntityRef<tblBankAccount> _tblBankAccount;
		
		private EntityRef<tblCompanyCustomer> _tblCompanyCustomer;
		
		private EntityRef<tblWorker> _tblWorker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninvoiceNoChanging(int value);
    partial void OninvoiceNoChanged();
    partial void OncreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedDateChanged();
    partial void OntaskDateChanging(System.DateTime value);
    partial void OntaskDateChanged();
    partial void OndescriptionTaskChanging(string value);
    partial void OndescriptionTaskChanged();
    partial void OndateSendBillChanging(System.Nullable<System.DateTime> value);
    partial void OndateSendBillChanged();
    partial void OndaysToPaidChanging(System.Nullable<int> value);
    partial void OndaysToPaidChanged();
    partial void OnhoursUseChanging(System.Nullable<decimal> value);
    partial void OnhoursUseChanged();
    partial void OnpaidHourChanging(System.Nullable<decimal> value);
    partial void OnpaidHourChanged();
    partial void OncreateByChanging(int value);
    partial void OncreateByChanged();
    partial void OnpaidToACCChanging(int value);
    partial void OnpaidToACCChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void OnpaidChanging(System.Nullable<bool> value);
    partial void OnpaidChanged();
    #endregion
		
		public tblCompanyOrder()
		{
			this._tblBankAccount = default(EntityRef<tblBankAccount>);
			this._tblCompanyCustomer = default(EntityRef<tblCompanyCustomer>);
			this._tblWorker = default(EntityRef<tblWorker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoiceNo
		{
			get
			{
				return this._invoiceNo;
			}
			set
			{
				if ((this._invoiceNo != value))
				{
					this.OninvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._invoiceNo = value;
					this.SendPropertyChanged("invoiceNo");
					this.OninvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime taskDate
		{
			get
			{
				return this._taskDate;
			}
			set
			{
				if ((this._taskDate != value))
				{
					this.OntaskDateChanging(value);
					this.SendPropertyChanging();
					this._taskDate = value;
					this.SendPropertyChanged("taskDate");
					this.OntaskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptionTask", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string descriptionTask
		{
			get
			{
				return this._descriptionTask;
			}
			set
			{
				if ((this._descriptionTask != value))
				{
					this.OndescriptionTaskChanging(value);
					this.SendPropertyChanging();
					this._descriptionTask = value;
					this.SendPropertyChanged("descriptionTask");
					this.OndescriptionTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateSendBill", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dateSendBill
		{
			get
			{
				return this._dateSendBill;
			}
			set
			{
				if ((this._dateSendBill != value))
				{
					this.OndateSendBillChanging(value);
					this.SendPropertyChanging();
					this._dateSendBill = value;
					this.SendPropertyChanged("dateSendBill");
					this.OndateSendBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysToPaid", DbType="Int")]
		public System.Nullable<int> daysToPaid
		{
			get
			{
				return this._daysToPaid;
			}
			set
			{
				if ((this._daysToPaid != value))
				{
					this.OndaysToPaidChanging(value);
					this.SendPropertyChanging();
					this._daysToPaid = value;
					this.SendPropertyChanged("daysToPaid");
					this.OndaysToPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoursUse", DbType="Decimal(4,1)")]
		public System.Nullable<decimal> hoursUse
		{
			get
			{
				return this._hoursUse;
			}
			set
			{
				if ((this._hoursUse != value))
				{
					this.OnhoursUseChanging(value);
					this.SendPropertyChanging();
					this._hoursUse = value;
					this.SendPropertyChanged("hoursUse");
					this.OnhoursUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidHour", DbType="Decimal(4,1)")]
		public System.Nullable<decimal> paidHour
		{
			get
			{
				return this._paidHour;
			}
			set
			{
				if ((this._paidHour != value))
				{
					this.OnpaidHourChanging(value);
					this.SendPropertyChanging();
					this._paidHour = value;
					this.SendPropertyChanged("paidHour");
					this.OnpaidHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createBy", DbType="Int NOT NULL")]
		public int createBy
		{
			get
			{
				return this._createBy;
			}
			set
			{
				if ((this._createBy != value))
				{
					if (this._tblWorker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreateByChanging(value);
					this.SendPropertyChanging();
					this._createBy = value;
					this.SendPropertyChanged("createBy");
					this.OncreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidToACC", DbType="Int NOT NULL")]
		public int paidToACC
		{
			get
			{
				return this._paidToACC;
			}
			set
			{
				if ((this._paidToACC != value))
				{
					if (this._tblBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpaidToACCChanging(value);
					this.SendPropertyChanging();
					this._paidToACC = value;
					this.SendPropertyChanged("paidToACC");
					this.OnpaidToACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._tblCompanyCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit")]
		public System.Nullable<bool> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblCompanyOrder", Storage="_tblBankAccount", ThisKey="paidToACC", OtherKey="Id", IsForeignKey=true)]
		public tblBankAccount tblBankAccount
		{
			get
			{
				return this._tblBankAccount.Entity;
			}
			set
			{
				tblBankAccount previousValue = this._tblBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._tblBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBankAccount.Entity = null;
						previousValue.tblCompanyOrders.Remove(this);
					}
					this._tblBankAccount.Entity = value;
					if ((value != null))
					{
						value.tblCompanyOrders.Add(this);
						this._paidToACC = value.Id;
					}
					else
					{
						this._paidToACC = default(int);
					}
					this.SendPropertyChanged("tblBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompanyCustomer_tblCompanyOrder", Storage="_tblCompanyCustomer", ThisKey="customer", OtherKey="companyCustomersNo", IsForeignKey=true)]
		public tblCompanyCustomer tblCompanyCustomer
		{
			get
			{
				return this._tblCompanyCustomer.Entity;
			}
			set
			{
				tblCompanyCustomer previousValue = this._tblCompanyCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCompanyCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCompanyCustomer.Entity = null;
						previousValue.tblCompanyOrders.Remove(this);
					}
					this._tblCompanyCustomer.Entity = value;
					if ((value != null))
					{
						value.tblCompanyOrders.Add(this);
						this._customer = value.companyCustomersNo;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("tblCompanyCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblCompanyOrder", Storage="_tblWorker", ThisKey="createBy", OtherKey="workNo", IsForeignKey=true)]
		public tblWorker tblWorker
		{
			get
			{
				return this._tblWorker.Entity;
			}
			set
			{
				tblWorker previousValue = this._tblWorker.Entity;
				if (((previousValue != value) 
							|| (this._tblWorker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWorker.Entity = null;
						previousValue.tblCompanyOrders.Remove(this);
					}
					this._tblWorker.Entity = value;
					if ((value != null))
					{
						value.tblCompanyOrders.Add(this);
						this._createBy = value.workNo;
					}
					else
					{
						this._createBy = default(int);
					}
					this.SendPropertyChanged("tblWorker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDeleteItems")]
	public partial class tblDeleteItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNo;
		
		private string _itemInfo;
		
		private System.Nullable<System.DateTime> _deleteDate;
		
		private System.Nullable<bool> _restored;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNoChanging(int value);
    partial void OnItemNoChanged();
    partial void OnitemInfoChanging(string value);
    partial void OnitemInfoChanged();
    partial void OndeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeleteDateChanged();
    partial void OnrestoredChanging(System.Nullable<bool> value);
    partial void OnrestoredChanged();
    #endregion
		
		public tblDeleteItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemInfo", DbType="NVarChar(MAX)")]
		public string itemInfo
		{
			get
			{
				return this._itemInfo;
			}
			set
			{
				if ((this._itemInfo != value))
				{
					this.OnitemInfoChanging(value);
					this.SendPropertyChanging();
					this._itemInfo = value;
					this.SendPropertyChanged("itemInfo");
					this.OnitemInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleteDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> deleteDate
		{
			get
			{
				return this._deleteDate;
			}
			set
			{
				if ((this._deleteDate != value))
				{
					this.OndeleteDateChanging(value);
					this.SendPropertyChanging();
					this._deleteDate = value;
					this.SendPropertyChanged("deleteDate");
					this.OndeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restored", DbType="Bit")]
		public System.Nullable<bool> restored
		{
			get
			{
				return this._restored;
			}
			set
			{
				if ((this._restored != value))
				{
					this.OnrestoredChanging(value);
					this.SendPropertyChanging();
					this._restored = value;
					this.SendPropertyChanged("restored");
					this.OnrestoredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartment")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _department;
		
		private string _companyName;
		
		private int _cvrNo;
		
		private string _phoneNo;
		
		private string _altPhoneNo;
		
		private string @__address;
		
		private int _postNo;
		
		private string _email;
		
		private System.Nullable<bool> _active;
		
		private int _departmentHeadNo;
		
		private EntityRef<tblPostNo> _tblPostNo;
		
		private EntityRef<tblWorker> _tblWorker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndepartmentChanging(int value);
    partial void OndepartmentChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncvrNoChanging(int value);
    partial void OncvrNoChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    partial void OnaltPhoneNoChanging(string value);
    partial void OnaltPhoneNoChanged();
    partial void On_addressChanging(string value);
    partial void On_addressChanged();
    partial void OnpostNoChanging(int value);
    partial void OnpostNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OndepartmentHeadNoChanging(int value);
    partial void OndepartmentHeadNoChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblPostNo = default(EntityRef<tblPostNo>);
			this._tblWorker = default(EntityRef<tblWorker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cvrNo", DbType="Int NOT NULL")]
		public int cvrNo
		{
			get
			{
				return this._cvrNo;
			}
			set
			{
				if ((this._cvrNo != value))
				{
					this.OncvrNoChanging(value);
					this.SendPropertyChanging();
					this._cvrNo = value;
					this.SendPropertyChanged("cvrNo");
					this.OncvrNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altPhoneNo", DbType="NVarChar(25)")]
		public string altPhoneNo
		{
			get
			{
				return this._altPhoneNo;
			}
			set
			{
				if ((this._altPhoneNo != value))
				{
					this.OnaltPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._altPhoneNo = value;
					this.SendPropertyChanged("altPhoneNo");
					this.OnaltPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_address]", Storage="__address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _address
		{
			get
			{
				return this.@__address;
			}
			set
			{
				if ((this.@__address != value))
				{
					this.On_addressChanging(value);
					this.SendPropertyChanging();
					this.@__address = value;
					this.SendPropertyChanged("_address");
					this.On_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postNo", DbType="Int NOT NULL")]
		public int postNo
		{
			get
			{
				return this._postNo;
			}
			set
			{
				if ((this._postNo != value))
				{
					if (this._tblPostNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpostNoChanging(value);
					this.SendPropertyChanging();
					this._postNo = value;
					this.SendPropertyChanged("postNo");
					this.OnpostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentHeadNo", DbType="Int NOT NULL")]
		public int departmentHeadNo
		{
			get
			{
				return this._departmentHeadNo;
			}
			set
			{
				if ((this._departmentHeadNo != value))
				{
					if (this._tblWorker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndepartmentHeadNoChanging(value);
					this.SendPropertyChanging();
					this._departmentHeadNo = value;
					this.SendPropertyChanged("departmentHeadNo");
					this.OndepartmentHeadNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblDepartment", Storage="_tblPostNo", ThisKey="postNo", OtherKey="ID", IsForeignKey=true)]
		public tblPostNo tblPostNo
		{
			get
			{
				return this._tblPostNo.Entity;
			}
			set
			{
				tblPostNo previousValue = this._tblPostNo.Entity;
				if (((previousValue != value) 
							|| (this._tblPostNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPostNo.Entity = null;
						previousValue.tblDepartments.Remove(this);
					}
					this._tblPostNo.Entity = value;
					if ((value != null))
					{
						value.tblDepartments.Add(this);
						this._postNo = value.ID;
					}
					else
					{
						this._postNo = default(int);
					}
					this.SendPropertyChanged("tblPostNo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblDepartment", Storage="_tblWorker", ThisKey="departmentHeadNo", OtherKey="workNo", IsForeignKey=true)]
		public tblWorker tblWorker
		{
			get
			{
				return this._tblWorker.Entity;
			}
			set
			{
				tblWorker previousValue = this._tblWorker.Entity;
				if (((previousValue != value) 
							|| (this._tblWorker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWorker.Entity = null;
						previousValue.tblDepartments.Remove(this);
					}
					this._tblWorker.Entity = value;
					if ((value != null))
					{
						value.tblDepartments.Add(this);
						this._departmentHeadNo = value.workNo;
					}
					else
					{
						this._departmentHeadNo = default(int);
					}
					this.SendPropertyChanged("tblWorker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPostNo")]
	public partial class tblPostNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _postNo;
		
		private string _city;
		
		private EntitySet<tblCompanyCustomer> _tblCompanyCustomers;
		
		private EntitySet<tblDepartment> _tblDepartments;
		
		private EntitySet<tblPrivateCustomer> _tblPrivateCustomers;
		
		private EntitySet<tblWorker> _tblWorkers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpostNoChanging(int value);
    partial void OnpostNoChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public tblPostNo()
		{
			this._tblCompanyCustomers = new EntitySet<tblCompanyCustomer>(new Action<tblCompanyCustomer>(this.attach_tblCompanyCustomers), new Action<tblCompanyCustomer>(this.detach_tblCompanyCustomers));
			this._tblDepartments = new EntitySet<tblDepartment>(new Action<tblDepartment>(this.attach_tblDepartments), new Action<tblDepartment>(this.detach_tblDepartments));
			this._tblPrivateCustomers = new EntitySet<tblPrivateCustomer>(new Action<tblPrivateCustomer>(this.attach_tblPrivateCustomers), new Action<tblPrivateCustomer>(this.detach_tblPrivateCustomers));
			this._tblWorkers = new EntitySet<tblWorker>(new Action<tblWorker>(this.attach_tblWorkers), new Action<tblWorker>(this.detach_tblWorkers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postNo", DbType="Int NOT NULL")]
		public int postNo
		{
			get
			{
				return this._postNo;
			}
			set
			{
				if ((this._postNo != value))
				{
					this.OnpostNoChanging(value);
					this.SendPropertyChanging();
					this._postNo = value;
					this.SendPropertyChanged("postNo");
					this.OnpostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblCompanyCustomer", Storage="_tblCompanyCustomers", ThisKey="ID", OtherKey="postNo")]
		public EntitySet<tblCompanyCustomer> tblCompanyCustomers
		{
			get
			{
				return this._tblCompanyCustomers;
			}
			set
			{
				this._tblCompanyCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblDepartment", Storage="_tblDepartments", ThisKey="ID", OtherKey="postNo")]
		public EntitySet<tblDepartment> tblDepartments
		{
			get
			{
				return this._tblDepartments;
			}
			set
			{
				this._tblDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblPrivateCustomer", Storage="_tblPrivateCustomers", ThisKey="ID", OtherKey="postNo")]
		public EntitySet<tblPrivateCustomer> tblPrivateCustomers
		{
			get
			{
				return this._tblPrivateCustomers;
			}
			set
			{
				this._tblPrivateCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblWorker", Storage="_tblWorkers", ThisKey="ID", OtherKey="postNo")]
		public EntitySet<tblWorker> tblWorkers
		{
			get
			{
				return this._tblWorkers;
			}
			set
			{
				this._tblWorkers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCompanyCustomers(tblCompanyCustomer entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = this;
		}
		
		private void detach_tblCompanyCustomers(tblCompanyCustomer entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = null;
		}
		
		private void attach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = this;
		}
		
		private void detach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = null;
		}
		
		private void attach_tblPrivateCustomers(tblPrivateCustomer entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = this;
		}
		
		private void detach_tblPrivateCustomers(tblPrivateCustomer entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = null;
		}
		
		private void attach_tblWorkers(tblWorker entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = this;
		}
		
		private void detach_tblWorkers(tblWorker entity)
		{
			this.SendPropertyChanging();
			entity.tblPostNo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPrivateCustomers")]
	public partial class tblPrivateCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _privateCustomersNo;
		
		private string _name;
		
		private string _surname;
		
		private string _phoneNo;
		
		private string _altPhoneNo;
		
		private string _homeAddress;
		
		private int _postNo;
		
		private string _email;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<tblPrivetOrder> _tblPrivetOrders;
		
		private EntityRef<tblPostNo> _tblPostNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprivateCustomersNoChanging(int value);
    partial void OnprivateCustomersNoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    partial void OnaltPhoneNoChanging(string value);
    partial void OnaltPhoneNoChanged();
    partial void OnhomeAddressChanging(string value);
    partial void OnhomeAddressChanged();
    partial void OnpostNoChanging(int value);
    partial void OnpostNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public tblPrivateCustomer()
		{
			this._tblPrivetOrders = new EntitySet<tblPrivetOrder>(new Action<tblPrivetOrder>(this.attach_tblPrivetOrders), new Action<tblPrivetOrder>(this.detach_tblPrivetOrders));
			this._tblPostNo = default(EntityRef<tblPostNo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_privateCustomersNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int privateCustomersNo
		{
			get
			{
				return this._privateCustomersNo;
			}
			set
			{
				if ((this._privateCustomersNo != value))
				{
					this.OnprivateCustomersNoChanging(value);
					this.SendPropertyChanging();
					this._privateCustomersNo = value;
					this.SendPropertyChanged("privateCustomersNo");
					this.OnprivateCustomersNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altPhoneNo", DbType="NVarChar(25)")]
		public string altPhoneNo
		{
			get
			{
				return this._altPhoneNo;
			}
			set
			{
				if ((this._altPhoneNo != value))
				{
					this.OnaltPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._altPhoneNo = value;
					this.SendPropertyChanged("altPhoneNo");
					this.OnaltPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string homeAddress
		{
			get
			{
				return this._homeAddress;
			}
			set
			{
				if ((this._homeAddress != value))
				{
					this.OnhomeAddressChanging(value);
					this.SendPropertyChanging();
					this._homeAddress = value;
					this.SendPropertyChanged("homeAddress");
					this.OnhomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postNo", DbType="Int NOT NULL")]
		public int postNo
		{
			get
			{
				return this._postNo;
			}
			set
			{
				if ((this._postNo != value))
				{
					if (this._tblPostNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpostNoChanging(value);
					this.SendPropertyChanging();
					this._postNo = value;
					this.SendPropertyChanged("postNo");
					this.OnpostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPrivateCustomer_tblPrivetOrder", Storage="_tblPrivetOrders", ThisKey="privateCustomersNo", OtherKey="customers")]
		public EntitySet<tblPrivetOrder> tblPrivetOrders
		{
			get
			{
				return this._tblPrivetOrders;
			}
			set
			{
				this._tblPrivetOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblPrivateCustomer", Storage="_tblPostNo", ThisKey="postNo", OtherKey="ID", IsForeignKey=true)]
		public tblPostNo tblPostNo
		{
			get
			{
				return this._tblPostNo.Entity;
			}
			set
			{
				tblPostNo previousValue = this._tblPostNo.Entity;
				if (((previousValue != value) 
							|| (this._tblPostNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPostNo.Entity = null;
						previousValue.tblPrivateCustomers.Remove(this);
					}
					this._tblPostNo.Entity = value;
					if ((value != null))
					{
						value.tblPrivateCustomers.Add(this);
						this._postNo = value.ID;
					}
					else
					{
						this._postNo = default(int);
					}
					this.SendPropertyChanged("tblPostNo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblPrivateCustomer = this;
		}
		
		private void detach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblPrivateCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPrivetOrders")]
	public partial class tblPrivetOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoiceNo;
		
		private System.Nullable<System.DateTime> _createdDate;
		
		private System.DateTime _taskDate;
		
		private string _descriptionTask;
		
		private System.Nullable<System.DateTime> _dateSendBill;
		
		private System.Nullable<int> _daysToPaid;
		
		private System.Nullable<decimal> _hoursUse;
		
		private System.Nullable<decimal> _paidHour;
		
		private int _createBy;
		
		private int _paidToACC;
		
		private int _customers;
		
		private System.Nullable<bool> _paid;
		
		private EntityRef<tblPrivateCustomer> _tblPrivateCustomer;
		
		private EntityRef<tblBankAccount> _tblBankAccount;
		
		private EntityRef<tblWorker> _tblWorker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninvoiceNoChanging(int value);
    partial void OninvoiceNoChanged();
    partial void OncreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedDateChanged();
    partial void OntaskDateChanging(System.DateTime value);
    partial void OntaskDateChanged();
    partial void OndescriptionTaskChanging(string value);
    partial void OndescriptionTaskChanged();
    partial void OndateSendBillChanging(System.Nullable<System.DateTime> value);
    partial void OndateSendBillChanged();
    partial void OndaysToPaidChanging(System.Nullable<int> value);
    partial void OndaysToPaidChanged();
    partial void OnhoursUseChanging(System.Nullable<decimal> value);
    partial void OnhoursUseChanged();
    partial void OnpaidHourChanging(System.Nullable<decimal> value);
    partial void OnpaidHourChanged();
    partial void OncreateByChanging(int value);
    partial void OncreateByChanged();
    partial void OnpaidToACCChanging(int value);
    partial void OnpaidToACCChanged();
    partial void OncustomersChanging(int value);
    partial void OncustomersChanged();
    partial void OnpaidChanging(System.Nullable<bool> value);
    partial void OnpaidChanged();
    #endregion
		
		public tblPrivetOrder()
		{
			this._tblPrivateCustomer = default(EntityRef<tblPrivateCustomer>);
			this._tblBankAccount = default(EntityRef<tblBankAccount>);
			this._tblWorker = default(EntityRef<tblWorker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoiceNo
		{
			get
			{
				return this._invoiceNo;
			}
			set
			{
				if ((this._invoiceNo != value))
				{
					this.OninvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._invoiceNo = value;
					this.SendPropertyChanged("invoiceNo");
					this.OninvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime taskDate
		{
			get
			{
				return this._taskDate;
			}
			set
			{
				if ((this._taskDate != value))
				{
					this.OntaskDateChanging(value);
					this.SendPropertyChanging();
					this._taskDate = value;
					this.SendPropertyChanged("taskDate");
					this.OntaskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptionTask", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string descriptionTask
		{
			get
			{
				return this._descriptionTask;
			}
			set
			{
				if ((this._descriptionTask != value))
				{
					this.OndescriptionTaskChanging(value);
					this.SendPropertyChanging();
					this._descriptionTask = value;
					this.SendPropertyChanged("descriptionTask");
					this.OndescriptionTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateSendBill", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dateSendBill
		{
			get
			{
				return this._dateSendBill;
			}
			set
			{
				if ((this._dateSendBill != value))
				{
					this.OndateSendBillChanging(value);
					this.SendPropertyChanging();
					this._dateSendBill = value;
					this.SendPropertyChanged("dateSendBill");
					this.OndateSendBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysToPaid", DbType="Int")]
		public System.Nullable<int> daysToPaid
		{
			get
			{
				return this._daysToPaid;
			}
			set
			{
				if ((this._daysToPaid != value))
				{
					this.OndaysToPaidChanging(value);
					this.SendPropertyChanging();
					this._daysToPaid = value;
					this.SendPropertyChanged("daysToPaid");
					this.OndaysToPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoursUse", DbType="Decimal(3,1)")]
		public System.Nullable<decimal> hoursUse
		{
			get
			{
				return this._hoursUse;
			}
			set
			{
				if ((this._hoursUse != value))
				{
					this.OnhoursUseChanging(value);
					this.SendPropertyChanging();
					this._hoursUse = value;
					this.SendPropertyChanged("hoursUse");
					this.OnhoursUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidHour", DbType="Decimal(4,1)")]
		public System.Nullable<decimal> paidHour
		{
			get
			{
				return this._paidHour;
			}
			set
			{
				if ((this._paidHour != value))
				{
					this.OnpaidHourChanging(value);
					this.SendPropertyChanging();
					this._paidHour = value;
					this.SendPropertyChanged("paidHour");
					this.OnpaidHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createBy", DbType="Int NOT NULL")]
		public int createBy
		{
			get
			{
				return this._createBy;
			}
			set
			{
				if ((this._createBy != value))
				{
					if (this._tblWorker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreateByChanging(value);
					this.SendPropertyChanging();
					this._createBy = value;
					this.SendPropertyChanged("createBy");
					this.OncreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidToACC", DbType="Int NOT NULL")]
		public int paidToACC
		{
			get
			{
				return this._paidToACC;
			}
			set
			{
				if ((this._paidToACC != value))
				{
					if (this._tblBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpaidToACCChanging(value);
					this.SendPropertyChanging();
					this._paidToACC = value;
					this.SendPropertyChanged("paidToACC");
					this.OnpaidToACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customers", DbType="Int NOT NULL")]
		public int customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				if ((this._customers != value))
				{
					if (this._tblPrivateCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomersChanging(value);
					this.SendPropertyChanging();
					this._customers = value;
					this.SendPropertyChanged("customers");
					this.OncustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit")]
		public System.Nullable<bool> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPrivateCustomer_tblPrivetOrder", Storage="_tblPrivateCustomer", ThisKey="customers", OtherKey="privateCustomersNo", IsForeignKey=true)]
		public tblPrivateCustomer tblPrivateCustomer
		{
			get
			{
				return this._tblPrivateCustomer.Entity;
			}
			set
			{
				tblPrivateCustomer previousValue = this._tblPrivateCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblPrivateCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPrivateCustomer.Entity = null;
						previousValue.tblPrivetOrders.Remove(this);
					}
					this._tblPrivateCustomer.Entity = value;
					if ((value != null))
					{
						value.tblPrivetOrders.Add(this);
						this._customers = value.privateCustomersNo;
					}
					else
					{
						this._customers = default(int);
					}
					this.SendPropertyChanged("tblPrivateCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblPrivetOrder", Storage="_tblBankAccount", ThisKey="paidToACC", OtherKey="Id", IsForeignKey=true)]
		public tblBankAccount tblBankAccount
		{
			get
			{
				return this._tblBankAccount.Entity;
			}
			set
			{
				tblBankAccount previousValue = this._tblBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._tblBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBankAccount.Entity = null;
						previousValue.tblPrivetOrders.Remove(this);
					}
					this._tblBankAccount.Entity = value;
					if ((value != null))
					{
						value.tblPrivetOrders.Add(this);
						this._paidToACC = value.Id;
					}
					else
					{
						this._paidToACC = default(int);
					}
					this.SendPropertyChanged("tblBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblPrivetOrder", Storage="_tblWorker", ThisKey="createBy", OtherKey="workNo", IsForeignKey=true)]
		public tblWorker tblWorker
		{
			get
			{
				return this._tblWorker.Entity;
			}
			set
			{
				tblWorker previousValue = this._tblWorker.Entity;
				if (((previousValue != value) 
							|| (this._tblWorker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWorker.Entity = null;
						previousValue.tblPrivetOrders.Remove(this);
					}
					this._tblWorker.Entity = value;
					if ((value != null))
					{
						value.tblPrivetOrders.Add(this);
						this._createBy = value.workNo;
					}
					else
					{
						this._createBy = default(int);
					}
					this.SendPropertyChanged("tblWorker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWorkers")]
	public partial class tblWorker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _workNo;
		
		private string _name;
		
		private string _surname;
		
		private int _workerStatus;
		
		private string _phoneNo;
		
		private string _altPhoneNo;
		
		private string _homeAddress;
		
		private int _postNo;
		
		private string _email;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<tblCompanyOrder> _tblCompanyOrders;
		
		private EntitySet<tblDepartment> _tblDepartments;
		
		private EntitySet<tblPrivetOrder> _tblPrivetOrders;
		
		private EntityRef<tblPostNo> _tblPostNo;
		
		private EntityRef<tblWorkerStatus> _tblWorkerStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnworkNoChanging(int value);
    partial void OnworkNoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnworkerStatusChanging(int value);
    partial void OnworkerStatusChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    partial void OnaltPhoneNoChanging(string value);
    partial void OnaltPhoneNoChanged();
    partial void OnhomeAddressChanging(string value);
    partial void OnhomeAddressChanged();
    partial void OnpostNoChanging(int value);
    partial void OnpostNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public tblWorker()
		{
			this._tblCompanyOrders = new EntitySet<tblCompanyOrder>(new Action<tblCompanyOrder>(this.attach_tblCompanyOrders), new Action<tblCompanyOrder>(this.detach_tblCompanyOrders));
			this._tblDepartments = new EntitySet<tblDepartment>(new Action<tblDepartment>(this.attach_tblDepartments), new Action<tblDepartment>(this.detach_tblDepartments));
			this._tblPrivetOrders = new EntitySet<tblPrivetOrder>(new Action<tblPrivetOrder>(this.attach_tblPrivetOrders), new Action<tblPrivetOrder>(this.detach_tblPrivetOrders));
			this._tblPostNo = default(EntityRef<tblPostNo>);
			this._tblWorkerStatus = default(EntityRef<tblWorkerStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int workNo
		{
			get
			{
				return this._workNo;
			}
			set
			{
				if ((this._workNo != value))
				{
					this.OnworkNoChanging(value);
					this.SendPropertyChanging();
					this._workNo = value;
					this.SendPropertyChanged("workNo");
					this.OnworkNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workerStatus", DbType="Int NOT NULL")]
		public int workerStatus
		{
			get
			{
				return this._workerStatus;
			}
			set
			{
				if ((this._workerStatus != value))
				{
					if (this._tblWorkerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkerStatusChanging(value);
					this.SendPropertyChanging();
					this._workerStatus = value;
					this.SendPropertyChanged("workerStatus");
					this.OnworkerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altPhoneNo", DbType="NVarChar(25)")]
		public string altPhoneNo
		{
			get
			{
				return this._altPhoneNo;
			}
			set
			{
				if ((this._altPhoneNo != value))
				{
					this.OnaltPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._altPhoneNo = value;
					this.SendPropertyChanged("altPhoneNo");
					this.OnaltPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string homeAddress
		{
			get
			{
				return this._homeAddress;
			}
			set
			{
				if ((this._homeAddress != value))
				{
					this.OnhomeAddressChanging(value);
					this.SendPropertyChanging();
					this._homeAddress = value;
					this.SendPropertyChanged("homeAddress");
					this.OnhomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postNo", DbType="Int NOT NULL")]
		public int postNo
		{
			get
			{
				return this._postNo;
			}
			set
			{
				if ((this._postNo != value))
				{
					if (this._tblPostNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpostNoChanging(value);
					this.SendPropertyChanging();
					this._postNo = value;
					this.SendPropertyChanged("postNo");
					this.OnpostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblCompanyOrder", Storage="_tblCompanyOrders", ThisKey="workNo", OtherKey="createBy")]
		public EntitySet<tblCompanyOrder> tblCompanyOrders
		{
			get
			{
				return this._tblCompanyOrders;
			}
			set
			{
				this._tblCompanyOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblDepartment", Storage="_tblDepartments", ThisKey="workNo", OtherKey="departmentHeadNo")]
		public EntitySet<tblDepartment> tblDepartments
		{
			get
			{
				return this._tblDepartments;
			}
			set
			{
				this._tblDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblPrivetOrder", Storage="_tblPrivetOrders", ThisKey="workNo", OtherKey="createBy")]
		public EntitySet<tblPrivetOrder> tblPrivetOrders
		{
			get
			{
				return this._tblPrivetOrders;
			}
			set
			{
				this._tblPrivetOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPostNo_tblWorker", Storage="_tblPostNo", ThisKey="postNo", OtherKey="ID", IsForeignKey=true)]
		public tblPostNo tblPostNo
		{
			get
			{
				return this._tblPostNo.Entity;
			}
			set
			{
				tblPostNo previousValue = this._tblPostNo.Entity;
				if (((previousValue != value) 
							|| (this._tblPostNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPostNo.Entity = null;
						previousValue.tblWorkers.Remove(this);
					}
					this._tblPostNo.Entity = value;
					if ((value != null))
					{
						value.tblWorkers.Add(this);
						this._postNo = value.ID;
					}
					else
					{
						this._postNo = default(int);
					}
					this.SendPropertyChanged("tblPostNo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorkerStatus_tblWorker", Storage="_tblWorkerStatus", ThisKey="workerStatus", OtherKey="statusNo", IsForeignKey=true)]
		public tblWorkerStatus tblWorkerStatus
		{
			get
			{
				return this._tblWorkerStatus.Entity;
			}
			set
			{
				tblWorkerStatus previousValue = this._tblWorkerStatus.Entity;
				if (((previousValue != value) 
							|| (this._tblWorkerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWorkerStatus.Entity = null;
						previousValue.tblWorkers.Remove(this);
					}
					this._tblWorkerStatus.Entity = value;
					if ((value != null))
					{
						value.tblWorkers.Add(this);
						this._workerStatus = value.statusNo;
					}
					else
					{
						this._workerStatus = default(int);
					}
					this.SendPropertyChanged("tblWorkerStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = this;
		}
		
		private void detach_tblCompanyOrders(tblCompanyOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = null;
		}
		
		private void attach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = this;
		}
		
		private void detach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = null;
		}
		
		private void attach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = this;
		}
		
		private void detach_tblPrivetOrders(tblPrivetOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWorkerStatus")]
	public partial class tblWorkerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _statusNo;
		
		private string _status;
		
		private EntitySet<tblWorker> _tblWorkers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstatusNoChanging(int value);
    partial void OnstatusNoChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public tblWorkerStatus()
		{
			this._tblWorkers = new EntitySet<tblWorker>(new Action<tblWorker>(this.attach_tblWorkers), new Action<tblWorker>(this.detach_tblWorkers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int statusNo
		{
			get
			{
				return this._statusNo;
			}
			set
			{
				if ((this._statusNo != value))
				{
					this.OnstatusNoChanging(value);
					this.SendPropertyChanging();
					this._statusNo = value;
					this.SendPropertyChanged("statusNo");
					this.OnstatusNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorkerStatus_tblWorker", Storage="_tblWorkers", ThisKey="statusNo", OtherKey="workerStatus")]
		public EntitySet<tblWorker> tblWorkers
		{
			get
			{
				return this._tblWorkers;
			}
			set
			{
				this._tblWorkers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblWorkers(tblWorker entity)
		{
			this.SendPropertyChanging();
			entity.tblWorkerStatus = this;
		}
		
		private void detach_tblWorkers(tblWorker entity)
		{
			this.SendPropertyChanging();
			entity.tblWorkerStatus = null;
		}
	}
}
#pragma warning restore 1591
